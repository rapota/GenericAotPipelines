// <auto-generated/>

#pragma warning disable
#nullable enable

using Microsoft.Extensions.DependencyInjection;

namespace GenericAotPipelines.Generators.IntegrationTests
{
    [global::System.CodeDom.Compiler.GeneratedCode("GenericAotPipelines.Generators.DecoratorGenerator", "1.0.0.0")]
    [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
    partial class GetByIdRequestHandler
    {
        private sealed class GetByIdRequestHandlerDecorator
            : global::GenericAotPipelines.PipelineDecorator<GenericAotPipelines.Generators.IntegrationTests.GetByIdRequest, GenericAotPipelines.Generators.IntegrationTests.Todo>
            , GenericAotPipelines.Generators.IntegrationTests.IGetByIdRequestHandler
        {
            public GetByIdRequestHandlerDecorator(
                GenericAotPipelines.Generators.IntegrationTests.DefaultPipeline<GenericAotPipelines.Generators.IntegrationTests.GetByIdRequest, GenericAotPipelines.Generators.IntegrationTests.Todo> pipeline,
                GetByIdRequestHandler handler)
                : base(pipeline, handler)
            {
            }
        }
        
        internal static void RegisterDecoratedHandler(IServiceCollection services)
        {
            services
                .AddTransient<GetByIdRequestHandler>()
                .AddTransient<GenericAotPipelines.Generators.IntegrationTests.IGetByIdRequestHandler, GetByIdRequestHandlerDecorator>();
        }
    }
}
